<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Player extends \Entities\Player implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($value)
    {
        $this->__load();
        return parent::setId($value);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setName($value)
    {
        $this->__load();
        return parent::setName($value);
    }

    public function getUpdateDate()
    {
        $this->__load();
        return parent::getUpdateDate();
    }

    public function setUpdateDate($value)
    {
        $this->__load();
        return parent::setUpdateDate($value);
    }

    public function preUpdateSetUpdateDate()
    {
        $this->__load();
        return parent::preUpdateSetUpdateDate();
    }

    public function getCreateDate()
    {
        $this->__load();
        return parent::getCreateDate();
    }

    public function setCreateDate($value)
    {
        $this->__load();
        return parent::setCreateDate($value);
    }

    public function prePersistSetCreateDate()
    {
        $this->__load();
        return parent::prePersistSetCreateDate();
    }

    public function getActive()
    {
        $this->__load();
        return parent::getActive();
    }

    public function setActive($value)
    {
        $this->__load();
        return parent::setActive($value);
    }

    public function getBanned()
    {
        $this->__load();
        return parent::getBanned();
    }

    public function setBanned($value)
    {
        $this->__load();
        return parent::setBanned($value);
    }

    public function getGold()
    {
        $this->__load();
        return parent::getGold();
    }

    public function setGold($value)
    {
        $this->__load();
        return parent::setGold($value);
    }

    public function getRole()
    {
        $this->__load();
        return parent::getRole();
    }

    public function setRole($value)
    {
        $this->__load();
        return parent::setRole($value);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setUser($value)
    {
        $this->__load();
        return parent::setUser($value);
    }

    public function addBuddy($user)
    {
        $this->__load();
        return parent::addBuddy($user);
    }

    public function addBuddyBuddy($buddy)
    {
        $this->__load();
        return parent::addBuddyBuddy($buddy);
    }

    public function buddyExists($user)
    {
        $this->__load();
        return parent::buddyExists($user);
    }

    public function getBuddy($user)
    {
        $this->__load();
        return parent::getBuddy($user);
    }

    public function removeBuddy($user)
    {
        $this->__load();
        return parent::removeBuddy($user);
    }

    public function removeBuddyBuddy(\Entities\Buddy $buddy)
    {
        $this->__load();
        return parent::removeBuddyBuddy($buddy);
    }

    public function getBuddies()
    {
        $this->__load();
        return parent::getBuddies();
    }

    public function addServer($server)
    {
        $this->__load();
        return parent::addServer($server);
    }

    public function updateFromAPI()
    {
        $this->__load();
        return parent::updateFromAPI();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'updateDate', 'createDate', 'active', 'banned', 'gold', 'role', 'user', 'buddies', 'servers');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}